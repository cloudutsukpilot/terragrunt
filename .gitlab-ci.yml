image: ruby:3.1

stages:
  - validate
  - init
  - plan
  - apply

variables:
  TERRAGRUNT_VERSION: "0.69.2" # Update to your required Terragrunt version
  TERRAFORM_VERSION: v1.9.8
  TF_WORKING_DIR: "environments" # Update to your Terragrunt root directory
  TERRAGRUNT_PLAN_FILE: "terragrunt-plan"

before_script:
  # Install necessary tools for Terraform and Terragrunt
  - apt-get update && apt-get install -y curl unzip bash
  # Install Terraform
  - echo "Terraform version to be installed: ${TERRAFORM_VERSION}"
  - curl -fsSL https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip -o terraform.zip
  - unzip terraform.zip -d /usr/local/bin/
  - rm terraform.zip
  # Install Terragrunt
  - curl -L https://github.com/gruntwork-io/terragrunt/releases/download/v${TERRAGRUNT_VERSION}/terragrunt_linux_amd64 -o /usr/local/bin/terragrunt
  - chmod +x /usr/local/bin/terragrunt
  # Verify installations
  - terraform --version
  - terragrunt --version

validate:
  stage: validate
  script:
    - cd $TF_WORKING_DIR
    - terragrunt hclfmt # Ensure HCL formatting is correct
    - terragrunt validate-all

init:
  stage: init
  script:
    - cd $TF_WORKING_DIR
    - terragrunt run-all init

plan:
  stage: plan
  script:
    - cd $TF_WORKING_DIR
    - terragrunt run-all plan --terragrunt-out-dir /tmp/tfplan
  artifacts:
    paths:
      - /tmp/tfplan
    when: always

apply:
  stage: apply
  script:
    - cd $TF_WORKING_DIR
    - terragrunt run-all apply --terragrunt-non-interactive --terragrunt-out-dir /tmp/tfplan
  when: manual # Prevent automatic application
  only:
    - main # Restrict apply to specific branches
