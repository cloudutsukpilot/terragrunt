image: 
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task.
  GITLAB_ENV: $CI_SERVER_HOST # To check if the pipeline is running on local Gitlab or Gitlab.com

stages:
  - echo-host
  - sonarcloud-check
  - sonarqube-check
#  - sonarqube-vulnerability-report

echo-host:
  stage: echo-host
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  script:
    - | 
      echo "CI_SERVER_HOST: $CI_SERVER_HOST"
      echo "GITLAB_ENV: $GITLAB_ENV"

sonarcloud-check:
  stage: sonarcloud-check
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  rules:
    - if: '$CI_MERGE_REQUEST_ID'
    - if: '$CI_COMMIT_BRANCH == "gitlabci"'
    - if: '$CI_SERVER_HOST == "gitlab.com"'

sonarqube-check:
  stage: sonarqube-check
  cache:
    policy: pull
    key: "${CI_COMMIT_SHORT_SHA}"
    paths:
      - sonar-scanner/
      
  script: 
    - sonar-scanner
      -Dsonar.projectKey=cloud-terraform \
      -Dsonar.sources=java \
      -Dsonar.host.url=http://localhost:9000 \
      -Dsonar.login={{.SONAR_TOKEN}} 
  allow_failure: true
  rules:
    - if: '$CI_SERVER_HOST != "gitlab.com"'

# sonarqube-vulnerability-report:
#   stage: sonarqube-vulnerability-report
#   script:
#     - 'curl -u "${SONAR_TOKEN}:" "${SONAR_HOST_URL}/api/issues/gitlab_sast_export?projectKey=sakharamgit_cloud_e8779eef-0f88-4494-9cdc-26ce6bf35db4&branch=${CI_COMMIT_BRANCH}&pullRequest=${CI_MERGE_REQUEST_IID}" -o gl-sast-sonar-report.json'
#   allow_failure: true
#   rules:
#     - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
#     - if: $CI_COMMIT_BRANCH == 'master'
#     - if: $CI_COMMIT_BRANCH == 'main'
#     - if: $CI_COMMIT_BRANCH == 'develop'
#   artifacts:
#     expire_in: 1 day
#     reports:
#       sast: gl-sast-sonar-report.json
